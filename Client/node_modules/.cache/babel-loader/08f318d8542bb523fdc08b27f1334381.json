{"ast":null,"code":"var _jsxFileName = \"/Users/university/Documents/SIT313/Tasks /Task 10.1/client/src/components/PostTask.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Button from './Button';\nimport TaskDescribe from './TaskDescribe';\nimport TaskPayment from './TaskPayment';\nimport TaskSetting from './TaskSetting';\nimport TaskType from './TaskType';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Task() {\n  _s();\n\n  const [isPerson, setIsPerson] = useState(true);\n  const [task, setTask] = useState({\n    task_type: '',\n    task_tittle: '',\n    task_description: '',\n    task_suburb: '',\n    task_date: '',\n    payment_type: '',\n    budget: ''\n  });\n\n  const onTypeChange = e => {\n    if (e.target.value === \"person\") {\n      setIsPerson(true);\n      setTask(preValue => {\n        return { ...preValue,\n          task_type: \"person\"\n        };\n      });\n    } else {\n      setIsPerson(false);\n      setTask(preValue => {\n        return { ...preValue,\n          task_type: \"online\"\n        };\n      });\n    }\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setTask(preValue => {\n      return { ...preValue,\n        [name]: value\n      };\n    });\n  };\n\n  const handleClick = () => {\n    fetch('http://localhost:8000/task', {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        task_type: task.task_type,\n        task_tittle: task.task_tittle,\n        task_description: task.task_description,\n        task_suburb: task.task_suburb,\n        task_date: task.task_date,\n        payment_type: task.payment_type,\n        budget: task.budget\n      })\n    }).then(response => response.json()).then(data => console(data)).catch(err => {\n      console.log(\"Error: \" + err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-div\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"main\",\n        children: \"New Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TaskType, {\n      typeChange: onTypeChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-div\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Describe youe task to Experts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TaskDescribe, {\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-div\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Setting up your Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TaskSetting, {\n      isTypePerson: isPerson,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-div\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Suggest how much\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TaskPayment, {\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Task, \"YTOv/sdZrwDI/JRyq2XAiLFppvM=\");\n\n_c = Task;\nexport default Task;\n\nvar _c;\n\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"sources":["/Users/university/Documents/SIT313/Tasks /Task 10.1/client/src/components/PostTask.jsx"],"names":["React","useState","Button","TaskDescribe","TaskPayment","TaskSetting","TaskType","Task","isPerson","setIsPerson","task","setTask","task_type","task_tittle","task_description","task_suburb","task_date","payment_type","budget","onTypeChange","e","target","value","preValue","handleChange","event","name","handleClick","fetch","method","headers","body","JSON","stringify","then","response","json","data","console","catch","err","log"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Button from './Button';\nimport TaskDescribe from './TaskDescribe';\nimport TaskPayment from './TaskPayment';\nimport TaskSetting from './TaskSetting';\nimport TaskType from './TaskType';\n\nfunction Task() {\n  const [isPerson, setIsPerson] = useState(true)\n  const [task, setTask] = useState({\n    task_type: '',\n    task_tittle: '',\n    task_description: '',\n    task_suburb: '',\n    task_date: '',\n    payment_type: '',\n    budget: ''\n  })\n  const onTypeChange = (e) => {\n    if (e.target.value === \"person\") {\n      setIsPerson(true)\n      setTask((preValue) => {\n        return {\n          ...preValue,\n          task_type: \"person\"\n        }\n      })\n    }\n    else {\n      setIsPerson(false)\n      setTask((preValue) => {\n        return {\n          ...preValue,\n          task_type: \"online\"\n        }\n      })\n    }\n  }\n  const handleChange = (event) => {\n    const { name, value } = event.target\n    setTask((preValue) => {\n      return {\n        ...preValue,\n        [name]: value\n      }\n    })\n  }\n  const handleClick = () => {\n    fetch('http://localhost:8000/task', {\n      method: 'post',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        task_type: task.task_type,\n        task_tittle: task.task_tittle,\n        task_description: task.task_description,\n        task_suburb: task.task_suburb,\n        task_date: task.task_date,\n        payment_type: task.payment_type,\n        budget: task.budget\n      })\n    })\n      .then(response => response.json())\n      .then(data => console(data))\n      .catch(err => {\n        console.log(\"Error: \" + err)\n      })\n  }\n  return (\n      <div className=\"Container\">\n        <div className=\"header-div\">\n          <h1 className=\"main\">New Task</h1>\n        </div>\n        <TaskType typeChange={onTypeChange} />\n        <div className=\"header-div\">\n          <h2>Describe youe task to Experts</h2>\n        </div>\n        <TaskDescribe onChange={handleChange} />\n        <div className=\"header-div\">\n          <h2>Setting up your Task</h2>\n        </div>\n        <TaskSetting isTypePerson={isPerson} onChange={handleChange} />\n        <div className=\"header-div\">\n          <h2>Suggest how much</h2>\n        </div>\n        <TaskPayment onChange={handleChange} />\n        <Button onClick={handleClick} />\n        <br/>\n        <br/>\n      </div>\n  );\n}\n\nexport default Task"]},"metadata":{},"sourceType":"module"}